# Predicting whether a GitHub issue is about documentation (Text Classification)

stages:
  filter:
    desc: "Filter data that has too much text"
    cmd:
      - python scripts/filter.py
    deps:
      - scripts/filter.py
      - "assets/${vars.train}_raw.jsonl"
      - "assets/${vars.dev}_raw.jsonl"
    outs:
      - "assets/${vars.train}.jsonl"
      - "assets/${vars.dev}.jsonl"

  preprocess:
    desc: "Convert the data to spaCy's binary format"
    cmd:
      - "python scripts/preprocess.py assets/${vars.train}.jsonl corpus/${vars.train}.spacy"
      - "python scripts/preprocess.py assets/${vars.dev}.jsonl corpus/${vars.dev}.spacy"
    deps:
      - "assets/${vars.train}.jsonl"
      - "assets/${vars.dev}.jsonl"
      - "scripts/preprocess.py"
    outs:
      - "corpus/${vars.train}.spacy"
      - "corpus/${vars.dev}.spacy"

  train-model-1:
    desc: "Train a text classification model - short"
    cmd:
      - "python -m spacy train configs/${model-1.config} --output training/${model-1.model} --paths.train corpus/${vars.train}.spacy --paths.dev corpus/${vars.dev}.spacy --gpu-id ${vars.gpu_id}"
      - "rm -rf training/${model-1.model}/model-last"
    deps:
      - "corpus/${vars.train}.spacy"
      - "corpus/${vars.dev}.spacy"
      - "configs/${model-1.config}"
    outs:
      - "training/${model-1.model}/model-best"

  train-model-2:
    desc: "Train a text classification model - medium"
    cmd:
      - "python -m spacy train configs/${model-2.config} --output training/${model-2.model} --paths.train corpus/${vars.train}.spacy --paths.dev corpus/${vars.dev}.spacy --gpu-id ${vars.gpu_id}"
      - "rm -rf training/${model-2.model}/model-last"
    deps:
      - "corpus/${vars.train}.spacy"
      - "corpus/${vars.dev}.spacy"
      - "configs/${model-2.config}"
    outs:
      - "training/${model-2.model}/model-best"

  evaluate:
    desc: "Evaluate the model and export metrics"
    cmd:
      - "python -m spacy evaluate training/${model-1.model}/model-best corpus/${vars.dev}.spacy --output training/${model-1.model}/metrics.json --gpu-id ${vars.gpu_id}"
      - "python -m spacy evaluate training/${model-2.model}/model-best corpus/${vars.dev}.spacy --output training/${model-2.model}/metrics.json --gpu-id ${vars.gpu_id}"
    deps:
      - "corpus/${vars.dev}.spacy"
      - "training/${model-1.model}/model-best"
      - "training/${model-2.model}/model-best"
    outs:
      - "training/${model-1.model}/metrics.json"
      - "training/${model-2.model}/metrics.json"
